buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

group = 'co.jp.simplex'
jar.baseName = 'siw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

def urlFile = { url, name ->
    File file = new File("$buildDir/libs/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        new URL(url).withInputStream { downloadStream ->
            file.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }
    }
    files(file.absolutePath)
}

dependencies {
	// compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
	compile group: 'com.github.briandilley.jsonrpc4j', name: 'jsonrpc4j', version: '1.5.1'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.modelmapper', name: 'modelmapper', version: '1.1.0' // DTO <-> Model のマッピング用ライブラリ
	compile group: 'org.zeromq', name: 'jeromq', version: '0.4.2'
	compile 'org.springframework.statemachine:spring-statemachine-core:1.2.6.RELEASE'
	compile("org.springframework.boot:spring-boot-starter-websocket")
	compile("org.springframework.boot:spring-boot-devtools")
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.2'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.2'

    compile files('lib/bitcoinj-core-0.14.5-bundled.jar')
	compileOnly('org.projectlombok:lombok')

	testCompile('org.springframework.boot:spring-boot-starter-test')

//    compile urlFile('https://github.com/nakanoya150151/siw/releases/download/0.0.1/siw-0.0.1-SNAPSHOT.jar?raw=true', 'siw')
}
task codeCoverageReport(type: JacocoReport) {
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
	reports {
		xml.enabled true
		xml.destination "${buildDir}/reports/jacoco/report.xml"
		html.enabled false
		csv.enabled false
	}
	classDirectories = fileTree(dir: './build/classes/main')
	sourceDirectories = files('src/main/java')
}

